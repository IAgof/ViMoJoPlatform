version: '2'
services:
  backend:
    restart: always
    build: ./MoJoFy
    image: mojofy_backend:${BACKEND_TAG}
    depends_on:
      - elasticsearch
    environment:
      - NODE_ENV=production
      - BACKEND_WINSTON_LOG_LEVEL=info
      - BACKEND_CLOUD_STORAGE_TYPE=gcloud
      - ELASTIC_INDEX=test
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
      - ELASTIC_LOG=info
#      - PORT
#      - JWT_SECRET
#      - JWT_ISSUER
#      - JWT_TOKEN_EXPIRATION
#      - SENDGRID_API_KEY
#      - BACKEND_EMAIL_NOTIFICATIONS_RECEIVER
#      - BACKEND_EMAIL_NOTIFICATIONS_SENDER
#      - BACKEND_DATASTORE_NAMESPACE
#      - BACKEND_GOOGLE_CLOUD_PROJECT_ID
#      - BACKEND_GCLOUD_STORAGE_ACCESS_ID
#      - BACKEND_GCLOUD_STORAGE_BUCKET
#      - ELASTIC_USER
#      - ELASTIC_PASS
    env_file: .env_backend.prod
    command: npm start

  elasticsearch:
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    expose:
      - "9300"
      - "9200"
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - discovery.type=single-node

  frontend:
    restart: always
    build: ./platform-frontend
    image: mojofy_frontend:${FRONTEND_TAG}
    expose:
      - "8080"
    ports:
      - "8080:8080"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - BACKEND_API_URL=http://${DOCKER_MACHINE_IP}:3000
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8080
#    env_file: .env_frontend.prod
    command: npm start

# TODO: for frontent production deployment
#  nginx:
#    restart: always
#    build: ./nginx/
#    ports:
#      - "80:80"
#    volumes:
#      - /www/static
#    volumes_from:
#      - web
#    links:
#      - web:web