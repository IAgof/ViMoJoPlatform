# compose file for overriding general docker-compose.yml for development purpose
version: '2'
services:
  backend:
    restart: always
    build: ./MoJoFy
    image: mojofy_backend
    ports:
      - "3000:3000"
    depends_on:
          - datastore
    links:
      - datastore:datastore
    volumes_from:
      - local_cloud_storage
    environment:
      - BACKEND_WINSTON_LOG_LEVEL=debug
      - NODE_ENV=development
      - DEBUG=express:*
      - FRONTEND_URL=http://${DOCKER_MACHINE_IP}:8080
      - BACKEND_CLOUD_STORAGE_TYPE=local_cloud
      - LOCAL_CLOUD_STORAGE_HOST=http://${DOCKER_MACHINE_IP}
      - DATASTORE_EMULATOR_HOST=http://datastore:8081
      - BACKEND_DATASTORE_NAMESPACE=VIMOJO_DEV
      - BACKEND_GOOGLE_CLOUD_PROJECT_ID=videona-test
#      - BACKEND_EMAIL_NOTIFICATIONS_RECEIVER=${EMAIL_NOTIFICATIONS_RECEIVER}
#      - BACKEND_EMAIL_NOTIFICATIONS_SENDER=${EMAIL_NOTIFICATIONS_SENDER}
#      - SENDGRID_API_KEY
#      - FLAVOUR=vimojo
    env_file: .env_backend.ovr
    command: npm start
#    command: node -e 'console.log(process.env);'

  elasticsearch:
      expose: # This will make them accessible through docker host
        - "9300"
        - "9200"

  local_cloud_storage:
    restart: always
    build: ./local_cloud_storage/
    ports:
      - "80:80"
    volumes:
      - video-uploads:/app/uploads

  frontend:
    restart: always
    build:
          context: ./platform-frontend
          args:
            - NODE_ENV=development
            - BACKEND_API_URL=http://${DOCKER_MACHINE_IP}:3000
            - FRONTEND_HOST=0.0.0.0
            - FRONTEND_PORT=8080
            - FLAVOUR # set the flavour in your environment
    image: mojofy_frontend
    depends_on:
      - backend
    expose:
      - "8080" # This will make it accessible through docker host
    environment:
      - NODE_ENV=development
      - BACKEND_API_URL=http://${DOCKER_MACHINE_IP}/api/v1
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8080
      - FLAVOUR # set the flavour in your environment
#    env_file: .env_frontend.ovr
    command: npm start

  datastore:
    restart: always
    image: singularities/datastore-emulator
    environment:
      - DATASTORE_LISTEN_ADDRESS=0.0.0.0:8081
      - DATASTORE_PROJECT_ID=videona-test
    volumes:
      - datastore-data:/opt/data
    expose:
      - 8081

volumes:
  esdata1:
    driver: local
  video-uploads:
    driver: local
  datastore-data:
    driver: local