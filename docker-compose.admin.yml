version: '2'
services:
  frontend-testrunner:
    build:
      context: ./platform-frontend
      dockerfile: ./Dockerfile.test
    ports:
      - 4200:4200
    environment:
#      - CHROME_BIN=/usr/bin/chromium-browser
      - NODE_ENV=production
      - BACKEND_API_URL=http://${DOCKER_MACHINE_IP}:3000
    working_dir: /app/src
    command: bash -c "../node_modules/gulp/bin/gulp.js build
      && ../node_modules/karma/bin/karma start --watch false --single-run true"

# Instead of running on the hidden Xvfb, you can also run the provided Chrome on a real display.
#  To do so you need to export the display, bind the /tmp sockets, and select the provided display-chromium
#  startup wrapper via the CHROME_BIN environment variable:
#  docker run -e DISPLAY=:0 -e CHROME_BIN=/usr/bin/display-chromium -u $(id -u) --rm -v /tmp:/tmp -v "$PWD":/app trion/ng-cli-karma ng test
  frontend-testrunner-local:
    build:
      context: ./platform-frontend
      dockerfile: ./Dockerfile.test
    ports:
      - 4200:4200
    volumes:
      - /tmp:/tmp
      - ./platform-frontend:/app/src
    environment:
      - DISPLAY=:0
      - CHROME_BIN=/usr/bin/display-chromium
    working_dir: /app/src
    command: bash -c "../node_modules/gulp/bin/gulp.js build
      && ../node_modules/karma/bin/karma start --watch true --single-run false"


  e2e-runner:
    build:
      context: .
      dockerfile: platform-tests/protractor/Dockerfile
    shm_size: 1g
    environment:
      - DISPLAY=:1
    links:
      - frontend:frontend

  e2e-runner-dev:
    build:
      context: .
      dockerfile: platform-tests/protractor/Dockerfile
    shm_size: 1g
    environment:
      - DISPLAY=:1
    links:
      - frontend:frontend
    volumes:
      - ./platform-tests/protractor/:/project
      - ./reports:/tmp/reports

  backend-testrunner:
    build: ./MoJoFy
    volumes:
      - ./MoJoFy:/app/src
    environment:
      - NODE_ENV=test
      - MAX_VIDEO_UPLOAD_BYTE_SIZE=1500000
      - ELASTIC_INDEX=test
      - ELASTIC_HOST=elasticsearch-test
      - ELASTIC_PORT=9200
      - ELASTIC_LOG=debug
      - BACKEND_WINSTON_LOG_LEVEL=debug
      - NODE_ENV=development
      - DEBUG=express:*
      - FRONTEND_URL=http://${DOCKER_MACHINE_IP}:8080
      - BACKEND_CLOUD_STORAGE_TYPE=local_cloud
      - LOCAL_CLOUD_STORAGE_HOST=http://${DOCKER_MACHINE_IP}
      - DATASTORE_EMULATOR_HOST=http://datastore-test:8081
      - BACKEND_DATASTORE_NAMESPACE=VIMOJO_DEV
      - BACKEND_GOOGLE_CLOUD_PROJECT_ID=videona-test
      - BACKEND_SEARCH_DB=fakelasticsearch
#      - PORT
#      - JWT_SECRET
#      - JWT_ISSUER
#      - JWT_TOKEN_EXPIRATION
#      - SENDGRID_API_KEY
#      - BACKEND_EMAIL_NOTIFICATIONS_RECEIVER
#      - BACKEND_EMAIL_NOTIFICATIONS_SENDER
#      - BACKEND_DATASTORE_NAMESPACE
#      - BACKEND_GOOGLE_CLOUD_PROJECT_ID
#      - BACKEND_GCLOUD_STORAGE_ACCESS_ID
#      - BACKEND_GCLOUD_STORAGE_BUCKET
#      - ELASTIC_USER
#      - ELASTIC_PASS
#      - FLAVOUR
    depends_on:
      - datastore-test
    links:
      - datastore-test
    entrypoint: node_modules/mocha/bin/mocha --reporter mocha-junit-reporter --reporter-options mochaFile=./src/report/test_results.xml --recursive
#    entrypoint: node_modules/mocha/bin/mocha --recursive
    command: src/test/

  datastore-test:
    restart: always
    image: singularities/datastore-emulator
    environment:
      - DATASTORE_LISTEN_ADDRESS=0.0.0.0:8081
      - DATASTORE_PROJECT_ID=videona-test
    # we don't want persistence here
#    volumes:
#      - datastore-test-data:/opt/data
    command: --consistency=1.0
    expose:
      - 8081

  elasticsearch-test:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.8
    # we don't want persistence here
#    volumes:
#      - esdata1:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
# TODO(jliarte): explore if we can define a ES service with less memory for testing
    mem_limit: 1g
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # TODO: check appropiate limmits here
#    env_file: .env_elastic.prod


#  casper-runner:
#    build: ./platform-tests/casper
#    environment:
#      - FRONTEND_IP=frontend
#    volumes:
#      - ./platform-tests/casper:/home/casperjs-tests
##    entrypoint: pwd
#    command: bash -c "casperjs test /home/casperjs-tests/*.js --xunit=ftestsreport.xml --log-level=debug;"

#  pip-installer:
#    build: ./
#    entrypoint: /usr/src/app/pip-installer.sh
#
#  web-manage.prod:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.admin
#    env_file: .env-prod
#    entrypoint: python /usr/src/app/manage.py
#
#  web-manage.local:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.admin
##    links:
##      - postgres:postgres
#    volumes:
#      - ./:/usr/src/app/
#    entrypoint: python /usr/src/app/manage.py
